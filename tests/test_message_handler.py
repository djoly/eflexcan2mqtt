"""Test cases for MessageHandler"""

import logging
from typing import List
from eflexcan2mqtt.message_handler import MessageHandler
from can import Message

logger = logging.getLogger(__name__)

def test_message_data_is_aggregated(can_messages):

    msg_handler = MessageHandler(logger)

    for msg in can_messages:
        msg_handler.on_message_received(msg)
    
    msg10_ids = msg_handler.compiled_message10X_data.keys()
    msg60_ids = msg_handler.compiled_message60X_data.keys()

    assert "1" in msg10_ids
    assert "2" in msg10_ids
    assert "3" in msg10_ids
    assert "1" in msg60_ids
    assert "2" in msg60_ids
    assert "3" in msg60_ids

    assert msg_handler.compiled_message10X_data["1"] == EXPECTED_101_DATA
    assert msg_handler.compiled_message10X_data["2"] == EXPECTED_102_DATA
    assert msg_handler.compiled_message10X_data["3"] == EXPECTED_103_DATA
    assert msg_handler.compiled_message60X_data["1"] == EXPECTED_601_DATA
    assert msg_handler.compiled_message60X_data["2"] == EXPECTED_602_DATA
    assert msg_handler.compiled_message60X_data["3"] == EXPECTED_603_DATA


EXPECTED_101_DATA = [
    0x01,0x0E,0x02,0x13,0xFF,0xFD,0x47,
    0x03,0x00,0x00,0x02,0x12,0x01,0x01,
    0x01,0xF4,0x02,0x58,0x00,0x01,0x2A,
    0x0C,0xF7,0x01,0x0C,0xF7,0x01,0x64,
    0x43,0x3F,0x35,0x00,0x02,0x7B,0xFA,
    0x02,0x15,0xFF,0xFF,0x00,0x00,0x19,
    0x00,0x00,0x00,0x00,0x0F,0xA6,0x61,
    0x22,0x11,0x00,0x75,0x46,0x03,0xBB,
    0x13,0x95,0xBA,0xEE,0x00,0x00,0x01,
    0x00,0x00,0x00,0x00,0x00,0x02,0x15,
    0x00,0x00,0x00,0x00,0x00,0x00,0x01
]

EXPECTED_601_DATA = [
    0xF7,0x0C,0xF7,0x0C,0xF7,0x0C,0xF7,
    0x0C,0xF7,0x0C,0xF7,0x0C,0xF7,0x0C,
    0xF7,0x0C,0xF7,0x0C,0xF7,0x0C,0xF7,
    0x0C,0xF7,0x0C,0xF7,0x0C,0xF7,0x0C,
    0xF7,0x0C,0xF7,0x0C,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x41,0x40,0x3F,0x40,0x43,0x43,0x00
]

EXPECTED_102_DATA = [
    0x02,0x0E,0x02,0x13,0xFF,0xFD,0x45,
    0x03,0x00,0x00,0x02,0x12,0x01,0x01,
    0x01,0xF4,0x02,0x58,0x00,0x01,0x2A,
    0x0C,0xF9,0x01,0x0C,0xF8,0x03,0x64,
    0x43,0x40,0x26,0x00,0x02,0x33,0x0A,
    0x02,0x14,0xFF,0xFF,0x00,0x00,0x18,
    0x00,0x00,0x00,0x00,0x0F,0xA6,0x61,
    0x22,0x05,0x00,0x75,0x45,0x02,0x5C,
    0x12,0xAF,0x9B,0x12,0x00,0x00,0x01,
    0x00,0x00,0x00,0x00,0x00,0x02,0x14,
    0x00,0x00,0x00,0x00,0x00,0x00,0x01,
]

EXPECTED_602_DATA = [
    0xF9,0x0C,0xF9,0x0C,0xF8,0x0C,0xF9,
    0x0C,0xF9,0x0C,0xF9,0x0C,0xF8,0x0C,
    0xF9,0x0C,0xF9,0x0C,0xF9,0x0C,0xF9,
    0x0C,0xF9,0x0C,0xF9,0x0C,0xF9,0x0C,
    0xF9,0x0C,0xF9,0x0C,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x41,0x40,0x40,0x40,0x41,0x43,0x00,   
]

EXPECTED_103_DATA = [
    0x03,0x0E,0x02,0x13,0xFF,0xFD,0x53,
    0x03,0x00,0x00,0x02,0x12,0x01,0x01,
    0x01,0xF4,0x02,0x58,0x00,0x01,0x2A,
    0x0C,0xF8,0x01,0x0C,0xF7,0x02,0x64,
    0x49,0x45,0x26,0x00,0x02,0x43,0x19,
    0x02,0x13,0xFF,0xFF,0x00,0x00,0x1E,
    0x00,0x00,0x00,0x00,0x0F,0xA6,0x61,
    0x22,0x05,0x00,0x75,0x45,0x00,0x70,
    0x14,0x93,0xFB,0x87,0x00,0x00,0x01,
    0x00,0x00,0x00,0x00,0x00,0x02,0x14,
    0x00,0x00,0x00,0x00,0x00,0x00,0x01,
]

EXPECTED_603_DATA = [
    0xF8,0x0C,0xF7,0x0C,0xF7,0x0C,0xF7,
    0x0C,0xF8,0x0C,0xF8,0x0C,0xF7,0x0C,
    0xF7,0x0C,0xF7,0x0C,0xF7,0x0C,0xF7,
    0x0C,0xF7,0x0C,0xF8,0x0C,0xF7,0x0C,
    0xF8,0x0C,0xF7,0x0C,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x47,0x45,0x45,0x45,0x46,0x49,0x00,
]