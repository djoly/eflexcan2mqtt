"""Test cases for MessageHandler"""

import logging
from typing import List
from eflexcan2mqtt.message_handler import MessageHandler, _all_messages_received, MSG_TYPE_10, MSG_TYPE_60
from can import Message

logger = logging.getLogger(__name__)

def test_all_messages_received_returns_false_if_10X_messages_are_out_of_order():

    assert _all_messages_received(MSG_TYPE_10, [
        Message(arbitration_id = 0x101, timestamp = 1715987138.038647, data = [0x08,0x22,0x11,0x00,0x75,0x46,0x03,0xBB]),
        Message(arbitration_id = 0x101, timestamp = 1715987138.039210, data = [0x09,0x13,0x95,0xBA,0xEE,0x00,0x00,0x01]),
        Message(arbitration_id = 0x101, timestamp = 1715987138.039687, data = [0x0A,0x00,0x00,0x00,0x00,0x00,0x02,0x15]),
        Message(arbitration_id = 0x101, timestamp = 1715987138.042916, data = [0x0B,0x00,0x00,0x00,0x00,0x00,0x00,0x01]),
        Message(arbitration_id = 0x101, timestamp = 1715987139.048187, data = [0x01,0x01,0x0E,0x02,0x13,0xFF,0xFD,0x47]),
        Message(arbitration_id = 0x101, timestamp = 1715987139.048532, data = [0x02,0x03,0x00,0x00,0x02,0x12,0x01,0x01]),
        Message(arbitration_id = 0x101, timestamp = 1715987139.049075, data = [0x03,0x01,0xF4,0x02,0x58,0x00,0x01,0x2A]),
        Message(arbitration_id = 0x101, timestamp = 1715987139.049539, data = [0x04,0x0C,0xF7,0x01,0x0C,0xF7,0x01,0x64]),
        Message(arbitration_id = 0x101, timestamp = 1715987139.049982, data = [0x05,0x43,0x3F,0x35,0x00,0x02,0x7B,0xFA]),
        Message(arbitration_id = 0x101, timestamp = 1715987139.050561, data = [0x06,0x02,0x15,0xFF,0xFF,0x00,0x00,0x19]),
        Message(arbitration_id = 0x101, timestamp = 1715987139.051026, data = [0x07,0x00,0x00,0x00,0x00,0x0F,0xA6,0x61]),
    ]) is False

def test_all_messages_received_returns_false_if_10X_messages_are_missing():

    assert _all_messages_received(MSG_TYPE_10, [
        Message(arbitration_id = 0x101, timestamp = 1715987139.048187, data = [0x01,0x01,0x0E,0x02,0x13,0xFF,0xFD,0x47]),
        Message(arbitration_id = 0x101, timestamp = 1715987139.048532, data = [0x02,0x03,0x00,0x00,0x02,0x12,0x01,0x01]),
        Message(arbitration_id = 0x101, timestamp = 1715987139.049075, data = [0x03,0x01,0xF4,0x02,0x58,0x00,0x01,0x2A]),
        Message(arbitration_id = 0x101, timestamp = 1715987139.049539, data = [0x04,0x0C,0xF7,0x01,0x0C,0xF7,0x01,0x64]),
        Message(arbitration_id = 0x101, timestamp = 1715987139.049982, data = [0x05,0x43,0x3F,0x35,0x00,0x02,0x7B,0xFA]),
        Message(arbitration_id = 0x101, timestamp = 1715987139.050561, data = [0x06,0x02,0x15,0xFF,0xFF,0x00,0x00,0x19]),
        Message(arbitration_id = 0x101, timestamp = 1715987139.051026, data = [0x07,0x00,0x00,0x00,0x00,0x0F,0xA6,0x61]),
    ]) is False

def test_all_messages_received_returns_false_if_10X_messages_are_duplicated():
    """This scenario can happen if the network goes down and messages stop being handled for some time,
    only to start being handled again. This is an edge case"""
    assert _all_messages_received(MSG_TYPE_10, [
        Message(arbitration_id = 0x102, timestamp = 1715987138.048410, data = [0x01,0x02,0x0E,0x02,0x13,0xFF,0xFD,0x45]),
        Message(arbitration_id = 0x102, timestamp = 1715987138.048683, data = [0x02,0x03,0x00,0x00,0x02,0x12,0x01,0x01]),
        Message(arbitration_id = 0x102, timestamp = 1715987138.049224, data = [0x03,0x01,0xF4,0x02,0x58,0x00,0x01,0x2A]),
        Message(arbitration_id = 0x102, timestamp = 1715987138.049644, data = [0x04,0x0C,0xF9,0x01,0x0C,0xF9,0x01,0x64]),
        Message(arbitration_id = 0x102, timestamp = 1715987138.050101, data = [0x05,0x43,0x40,0x26,0x00,0x02,0x33,0x0A]),
        Message(arbitration_id = 0x102, timestamp = 1715987138.050677, data = [0x06,0x02,0x14,0xFF,0xFF,0x00,0x00,0x18]),
        Message(arbitration_id = 0x102, timestamp = 1715987138.051174, data = [0x07,0x00,0x00,0x00,0x00,0x0F,0xA6,0x61]),
        Message(arbitration_id = 0x102, timestamp = 1715987139.063445, data = [0x06,0x02,0x14,0xFF,0xFF,0x00,0x00,0x18]),
        Message(arbitration_id = 0x102, timestamp = 1715987139.064023, data = [0x07,0x00,0x00,0x00,0x00,0x0F,0xA6,0x61]),
        Message(arbitration_id = 0x102, timestamp = 1715987139.064477, data = [0x08,0x22,0x05,0x00,0x75,0x45,0x02,0x5C]),
        Message(arbitration_id = 0x102, timestamp = 1715987139.064961, data = [0x09,0x12,0xAF,0x9B,0x12,0x00,0x00,0x01]),
    ]) is False

def test_all_messages_received_returns_true_if_10X_messages_are_found():

    assert _all_messages_received(MSG_TYPE_10, [
        Message(arbitration_id = 0x103, timestamp = 1715987139.081321, data = [0x01,0x03,0x0E,0x02,0x13,0xFF,0xFD,0x53]),
        Message(arbitration_id = 0x103, timestamp = 1715987139.081522, data = [0x02,0x03,0x00,0x00,0x02,0x12,0x01,0x01]),
        Message(arbitration_id = 0x103, timestamp = 1715987139.082070, data = [0x03,0x01,0xF4,0x02,0x58,0x00,0x01,0x2A]),
        Message(arbitration_id = 0x103, timestamp = 1715987139.082654, data = [0x04,0x0C,0xF8,0x01,0x0C,0xF7,0x02,0x64]),
        Message(arbitration_id = 0x103, timestamp = 1715987139.083098, data = [0x05,0x49,0x45,0x26,0x00,0x02,0x43,0x19]),
        Message(arbitration_id = 0x103, timestamp = 1715987139.083558, data = [0x06,0x02,0x13,0xFF,0xFF,0x00,0x00,0x1E]),
        Message(arbitration_id = 0x103, timestamp = 1715987139.084076, data = [0x07,0x00,0x00,0x00,0x00,0x0F,0xA6,0x61]),
        Message(arbitration_id = 0x103, timestamp = 1715987139.084526, data = [0x08,0x22,0x05,0x00,0x75,0x45,0x00,0x70]),
        Message(arbitration_id = 0x103, timestamp = 1715987139.085018, data = [0x09,0x14,0x93,0xFB,0x87,0x00,0x00,0x01]),
        Message(arbitration_id = 0x103, timestamp = 1715987139.085415, data = [0x0A,0x00,0x00,0x00,0x00,0x00,0x02,0x14]),
        Message(arbitration_id = 0x103, timestamp = 1715987139.085904, data = [0x0B,0x00,0x00,0x00,0x00,0x00,0x00,0x01]),
    ]) is True

def test_all_messages_received_returns_false_if_60X_messages_are_out_of_order():

    assert _all_messages_received(MSG_TYPE_60, [
        Message(arbitration_id = 0x603, timestamp = 1715987138.075991, data = [0x06,0x00,0x00,0x00,0x00,0x00,0x00,0x00]),
        Message(arbitration_id = 0x603, timestamp = 1715987138.076465, data = [0x11,0x47,0x45,0x45,0x45,0x46,0x49,0x00]),
        Message(arbitration_id = 0x603, timestamp = 1715987139.086371, data = [0x01,0xF8,0x0C,0xF7,0x0C,0xF7,0x0C,0xF7]),
        Message(arbitration_id = 0x603, timestamp = 1715987139.086858, data = [0x02,0x0C,0xF8,0x0C,0xF8,0x0C,0xF7,0x0C]),
        Message(arbitration_id = 0x603, timestamp = 1715987139.087389, data = [0x03,0xF7,0x0C,0xF7,0x0C,0xF7,0x0C,0xF7]),
        Message(arbitration_id = 0x603, timestamp = 1715987139.087870, data = [0x04,0x0C,0xF7,0x0C,0xF8,0x0C,0xF7,0x0C]),
        Message(arbitration_id = 0x603, timestamp = 1715987139.088367, data = [0x05,0xF8,0x0C,0xF7,0x0C,0x00,0x00,0x00]),
    ]) is False

def test_all_messages_received_returns_false_if_60X_messages_are_missing():

    assert _all_messages_received(MSG_TYPE_60, [
        Message(arbitration_id = 0x603, timestamp = 1715987138.073540, data = [0x01,0xF8,0x0C,0xF7,0x0C,0xF7,0x0C,0xF7]),
        Message(arbitration_id = 0x603, timestamp = 1715987138.074023, data = [0x02,0x0C,0xF8,0x0C,0xF8,0x0C,0xF7,0x0C]),
        Message(arbitration_id = 0x603, timestamp = 1715987138.074476, data = [0x03,0xF7,0x0C,0xF7,0x0C,0xF7,0x0C,0xF7]),
        Message(arbitration_id = 0x603, timestamp = 1715987138.074954, data = [0x04,0x0C,0xF7,0x0C,0xF8,0x0C,0xF7,0x0C]),
        Message(arbitration_id = 0x603, timestamp = 1715987138.075505, data = [0x05,0xF8,0x0C,0xF7,0x0C,0x00,0x00,0x00]),
        Message(arbitration_id = 0x603, timestamp = 1715987138.075991, data = [0x06,0x00,0x00,0x00,0x00,0x00,0x00,0x00]),
    ]) is False

def test_all_messages_received_returns_false_if_60X_messages_are_duplicated():
    """This scenario can happen if the network goes down and messages stop being handled for some time,
    only to start being handled again. This is an edge case"""
    assert _all_messages_received(MSG_TYPE_60, [
        Message(arbitration_id = 0x601, timestamp = 1715987138.043252, data = [0x01,0xF7,0x0C,0xF7,0x0C,0xF7,0x0C,0xF7]),
        Message(arbitration_id = 0x601, timestamp = 1715987138.043804, data = [0x02,0x0C,0xF7,0x0C,0xF7,0x0C,0xF7,0x0C]),
        Message(arbitration_id = 0x601, timestamp = 1715987138.044287, data = [0x03,0xF7,0x0C,0xF7,0x0C,0xF7,0x0C,0xF7]),
        Message(arbitration_id = 0x601, timestamp = 1715987139.053807, data = [0x02,0x0C,0xF7,0x0C,0xF7,0x0C,0xF7,0x0C]),
        Message(arbitration_id = 0x601, timestamp = 1715987139.054256, data = [0x03,0xF7,0x0C,0xF7,0x0C,0xF7,0x0C,0xF7]),
        Message(arbitration_id = 0x601, timestamp = 1715987139.054838, data = [0x04,0x0C,0xF7,0x0C,0xF7,0x0C,0xF7,0x0C]),

    ]) is False

def test_all_messages_received_returns_true_if_60X_messages_are_found():

    assert _all_messages_received(MSG_TYPE_60, [
        Message(arbitration_id = 0x603, timestamp = 1715987139.086371, data = [0x01,0xF8,0x0C,0xF7,0x0C,0xF7,0x0C,0xF7]),
        Message(arbitration_id = 0x603, timestamp = 1715987139.086858, data = [0x02,0x0C,0xF8,0x0C,0xF8,0x0C,0xF7,0x0C]),
        Message(arbitration_id = 0x603, timestamp = 1715987139.087389, data = [0x03,0xF7,0x0C,0xF7,0x0C,0xF7,0x0C,0xF7]),
        Message(arbitration_id = 0x603, timestamp = 1715987139.087870, data = [0x04,0x0C,0xF7,0x0C,0xF8,0x0C,0xF7,0x0C]),
        Message(arbitration_id = 0x603, timestamp = 1715987139.088367, data = [0x05,0xF8,0x0C,0xF7,0x0C,0x00,0x00,0x00]),
        Message(arbitration_id = 0x603, timestamp = 1715987139.088750, data = [0x06,0x00,0x00,0x00,0x00,0x00,0x00,0x00]),
        Message(arbitration_id = 0x603, timestamp = 1715987139.089255, data = [0x11,0x47,0x45,0x45,0x45,0x46,0x49,0x00]),
    ]) is True

def test_message_data_aggregation_following_network_down_event():

    msg_handler = MessageHandler(logger)

    can_messages = [
        Message(arbitration_id = 0x102, timestamp = 1715987138.048410, data = [0x01,0x02,0x0E,0x02,0x13,0xFF,0xFD,0x45]),
        Message(arbitration_id = 0x102, timestamp = 1715987138.048683, data = [0x02,0x03,0x00,0x00,0x02,0x12,0x01,0x01]),
        Message(arbitration_id = 0x102, timestamp = 1715987138.049224, data = [0x03,0x01,0xF4,0x02,0x58,0x00,0x01,0x2A]),
        Message(arbitration_id = 0x102, timestamp = 1715987138.049644, data = [0x04,0x0C,0xF9,0x01,0x0C,0xF9,0x01,0x64]),
        Message(arbitration_id = 0x102, timestamp = 1715987138.050101, data = [0x05,0x43,0x40,0x26,0x00,0x02,0x33,0x0A]),
        Message(arbitration_id = 0x102, timestamp = 1715987138.050677, data = [0x06,0x02,0x14,0xFF,0xFF,0x00,0x00,0x18]),
        Message(arbitration_id = 0x102, timestamp = 1715987138.051174, data = [0x07,0x00,0x00,0x00,0x00,0x0F,0xA6,0x61]),
        # <- Network Down Interuption ->
        Message(arbitration_id = 0x102, timestamp = 1715987139.062504, data = [0x04,0x0C,0xF9,0x01,0x0C,0xF8,0x03,0x64]),
        Message(arbitration_id = 0x102, timestamp = 1715987139.062983, data = [0x05,0x43,0x40,0x26,0x00,0x02,0x33,0x0A]),
        Message(arbitration_id = 0x102, timestamp = 1715987139.063445, data = [0x06,0x02,0x14,0xFF,0xFF,0x00,0x00,0x18]),
        Message(arbitration_id = 0x102, timestamp = 1715987139.064023, data = [0x07,0x00,0x00,0x00,0x00,0x0F,0xA6,0x61]),
        Message(arbitration_id = 0x102, timestamp = 1715987139.064477, data = [0x08,0x22,0x05,0x00,0x75,0x45,0x02,0x5C]),
        Message(arbitration_id = 0x102, timestamp = 1715987139.064961, data = [0x09,0x12,0xAF,0x9B,0x12,0x00,0x00,0x01]),
        Message(arbitration_id = 0x102, timestamp = 1715987139.065425, data = [0x0A,0x00,0x00,0x00,0x00,0x00,0x02,0x14]),
        Message(arbitration_id = 0x102, timestamp = 1715987139.065888, data = [0x0B,0x00,0x00,0x00,0x00,0x00,0x00,0x01]),

        Message(arbitration_id = 0x102, timestamp = 1715987139.061290, data = [0x01,0x02,0x0E,0x02,0x13,0xFF,0xFD,0x45]),
        Message(arbitration_id = 0x102, timestamp = 1715987139.061584, data = [0x02,0x03,0x00,0x00,0x02,0x12,0x01,0x01]),
        Message(arbitration_id = 0x102, timestamp = 1715987139.062039, data = [0x03,0x01,0xF4,0x02,0x58,0x00,0x01,0x2A]),
        Message(arbitration_id = 0x102, timestamp = 1715987139.062504, data = [0x04,0x0C,0xF9,0x01,0x0C,0xF8,0x03,0x64]),
        Message(arbitration_id = 0x102, timestamp = 1715987139.062983, data = [0x05,0x43,0x40,0x26,0x00,0x02,0x33,0x0A]),
        Message(arbitration_id = 0x102, timestamp = 1715987139.063445, data = [0x06,0x02,0x14,0xFF,0xFF,0x00,0x00,0x18]),
        Message(arbitration_id = 0x102, timestamp = 1715987139.064023, data = [0x07,0x00,0x00,0x00,0x00,0x0F,0xA6,0x61]),
        Message(arbitration_id = 0x102, timestamp = 1715987139.064477, data = [0x08,0x22,0x05,0x00,0x75,0x45,0x02,0x5C]),
        Message(arbitration_id = 0x102, timestamp = 1715987139.064961, data = [0x09,0x12,0xAF,0x9B,0x12,0x00,0x00,0x01]),
        Message(arbitration_id = 0x102, timestamp = 1715987139.065425, data = [0x0A,0x00,0x00,0x00,0x00,0x00,0x02,0x14]),
        Message(arbitration_id = 0x102, timestamp = 1715987139.065888, data = [0x0B,0x00,0x00,0x00,0x00,0x00,0x00,0x01]),
    ]

    for msg in can_messages:
        msg_handler.on_message_received(msg)

    msg10_ids = msg_handler.compiled_message10X_data.keys()

    assert "2" in msg10_ids
    assert msg_handler.compiled_message10X_data["2"] == EXPECTED_102_DATA
    
    

def test_message_data_is_aggregated(can_messages):

    msg_handler = MessageHandler(logger)

    for msg in can_messages:
        msg_handler.on_message_received(msg)
    
    msg10_ids = msg_handler.compiled_message10X_data.keys()
    msg60_ids = msg_handler.compiled_message60X_data.keys()

    assert "1" in msg10_ids
    assert "2" in msg10_ids
    assert "3" in msg10_ids
    assert "1" in msg60_ids
    assert "2" in msg60_ids
    assert "3" in msg60_ids

    assert msg_handler.compiled_message10X_data["1"] == EXPECTED_101_DATA
    assert msg_handler.compiled_message10X_data["2"] == EXPECTED_102_DATA
    assert msg_handler.compiled_message10X_data["3"] == EXPECTED_103_DATA
    assert msg_handler.compiled_message60X_data["1"] == EXPECTED_601_DATA
    assert msg_handler.compiled_message60X_data["2"] == EXPECTED_602_DATA
    assert msg_handler.compiled_message60X_data["3"] == EXPECTED_603_DATA


EXPECTED_101_DATA = [
    0x01,0x0E,0x02,0x13,0xFF,0xFD,0x47,
    0x03,0x00,0x00,0x02,0x12,0x01,0x01,
    0x01,0xF4,0x02,0x58,0x00,0x01,0x2A,
    0x0C,0xF7,0x01,0x0C,0xF7,0x01,0x64,
    0x43,0x3F,0x35,0x00,0x02,0x7B,0xFA,
    0x02,0x15,0xFF,0xFF,0x00,0x00,0x19,
    0x00,0x00,0x00,0x00,0x0F,0xA6,0x61,
    0x22,0x11,0x00,0x75,0x46,0x03,0xBB,
    0x13,0x95,0xBA,0xEE,0x00,0x00,0x01,
    0x00,0x00,0x00,0x00,0x00,0x02,0x15,
    0x00,0x00,0x00,0x00,0x00,0x00,0x01
]

EXPECTED_601_DATA = [
    0xF7,0x0C,0xF7,0x0C,0xF7,0x0C,0xF7,
    0x0C,0xF7,0x0C,0xF7,0x0C,0xF7,0x0C,
    0xF7,0x0C,0xF7,0x0C,0xF7,0x0C,0xF7,
    0x0C,0xF7,0x0C,0xF7,0x0C,0xF7,0x0C,
    0xF7,0x0C,0xF7,0x0C,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x41,0x40,0x3F,0x40,0x43,0x43,0x00
]

EXPECTED_102_DATA = [
    0x02,0x0E,0x02,0x13,0xFF,0xFD,0x45,
    0x03,0x00,0x00,0x02,0x12,0x01,0x01,
    0x01,0xF4,0x02,0x58,0x00,0x01,0x2A,
    0x0C,0xF9,0x01,0x0C,0xF8,0x03,0x64,
    0x43,0x40,0x26,0x00,0x02,0x33,0x0A,
    0x02,0x14,0xFF,0xFF,0x00,0x00,0x18,
    0x00,0x00,0x00,0x00,0x0F,0xA6,0x61,
    0x22,0x05,0x00,0x75,0x45,0x02,0x5C,
    0x12,0xAF,0x9B,0x12,0x00,0x00,0x01,
    0x00,0x00,0x00,0x00,0x00,0x02,0x14,
    0x00,0x00,0x00,0x00,0x00,0x00,0x01,
]

EXPECTED_602_DATA = [
    0xF9,0x0C,0xF9,0x0C,0xF8,0x0C,0xF9,
    0x0C,0xF9,0x0C,0xF9,0x0C,0xF8,0x0C,
    0xF9,0x0C,0xF9,0x0C,0xF9,0x0C,0xF9,
    0x0C,0xF9,0x0C,0xF9,0x0C,0xF9,0x0C,
    0xF9,0x0C,0xF9,0x0C,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x41,0x40,0x40,0x40,0x41,0x43,0x00,   
]

EXPECTED_103_DATA = [
    0x03,0x0E,0x02,0x13,0xFF,0xFD,0x53,
    0x03,0x00,0x00,0x02,0x12,0x01,0x01,
    0x01,0xF4,0x02,0x58,0x00,0x01,0x2A,
    0x0C,0xF8,0x01,0x0C,0xF7,0x02,0x64,
    0x49,0x45,0x26,0x00,0x02,0x43,0x19,
    0x02,0x13,0xFF,0xFF,0x00,0x00,0x1E,
    0x00,0x00,0x00,0x00,0x0F,0xA6,0x61,
    0x22,0x05,0x00,0x75,0x45,0x00,0x70,
    0x14,0x93,0xFB,0x87,0x00,0x00,0x01,
    0x00,0x00,0x00,0x00,0x00,0x02,0x14,
    0x00,0x00,0x00,0x00,0x00,0x00,0x01,
]

EXPECTED_603_DATA = [
    0xF8,0x0C,0xF7,0x0C,0xF7,0x0C,0xF7,
    0x0C,0xF8,0x0C,0xF8,0x0C,0xF7,0x0C,
    0xF7,0x0C,0xF7,0x0C,0xF7,0x0C,0xF7,
    0x0C,0xF7,0x0C,0xF8,0x0C,0xF7,0x0C,
    0xF8,0x0C,0xF7,0x0C,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x47,0x45,0x45,0x45,0x46,0x49,0x00,
]